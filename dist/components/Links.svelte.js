import './Links.svelte.css.proxy.js';
/* src/components/Links.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	destroy_each,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (3:2) {#each linkItems as linkItem}
function create_each_block(ctx) {
	let a;
	let img;
	let img_class_value;
	let img_src_value;
	let img_alt_value;
	let t0;
	let div;
	let span;
	let t1_value = /*linkItem*/ ctx[1].displayTitle + "";
	let t1;
	let a_href_value;
	let t2;

	return {
		c() {
			a = element("a");
			img = element("img");
			t0 = space();
			div = element("div");
			span = element("span");
			t1 = text(t1_value);
			t2 = space();
			attr(img, "class", img_class_value = "links-icon " + /*linkItem*/ ctx[1].id + " svelte-rf8wzc");
			if (img.src !== (img_src_value = /*linkItem*/ ctx[1].imgSrc)) attr(img, "src", img_src_value);
			attr(img, "alt", img_alt_value = "" + (/*linkItem*/ ctx[1].displayTitle + " icon"));
			attr(span, "class", "title svelte-rf8wzc");
			attr(div, "class", "title-wrapper svelte-rf8wzc");
			attr(a, "href", a_href_value = /*linkItem*/ ctx[1].url);
			attr(a, "class", "svelte-rf8wzc");
		},
		m(target, anchor) {
			insert(target, a, anchor);
			append(a, img);
			append(a, t0);
			append(a, div);
			append(div, span);
			append(span, t1);
			insert(target, t2, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(a);
			if (detaching) detach(t2);
		}
	};
}

function create_fragment(ctx) {
	let h2;
	let t1;
	let div;
	let each_value = /*linkItems*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			h2 = element("h2");
			h2.textContent = "Links";
			t1 = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr(div, "class", "links svelte-rf8wzc");
		},
		m(target, anchor) {
			insert(target, h2, anchor);
			insert(target, t1, anchor);
			insert(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*linkItems*/ 1) {
				each_value = /*linkItems*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h2);
			if (detaching) detach(t1);
			if (detaching) detach(div);
			destroy_each(each_blocks, detaching);
		}
	};
}

function instance($$self) {
	"use strict";

	const linkItems = [
		{
			id: "twitter",
			displayTitle: "Twitter",
			url: "https://twitter.com/yammerjp",
			imgSrc: "/assets/twitter.png"
		},
		{
			id: "github",
			displayTitle: "GitHub",
			url: "https://github.com/yammerjp",
			imgSrc: "/assets/github.png"
		},
		{
			id: "qiita",
			displayTitle: "Qiita",
			url: "https://qiita.com/basd4g",
			imgSrc: "/assets/qiita.png"
		},
		{
			id: "hatenablog",
			displayTitle: "はてなブログ",
			url: "https://basd4g.hatenablog.com",
			imgSrc: "/assets/hatenablog.png"
		},
		{
			id: "memo-yammer-jp",
			displayTitle: "memo.yammer.jp",
			url: "https://memo.yammer.jp",
			imgSrc: "/assets/memo-yammer-jp.png"
		}
	];

	return [linkItems];
}

class Links extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Links;