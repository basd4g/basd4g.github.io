import './Feed.svelte.css.proxy.js';
/* src/components/Feed.svelte generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let a;
	let div2;
	let h3;
	let t0_value = /*feed*/ ctx[0].title + "";
	let t0;
	let h3_class_value;
	let t1;
	let div0;
	let t5;
	let div1;
	let a_href_value;

	return {
		c() {
			a = element("a");
			div2 = element("div");
			h3 = element("h3");
			t0 = text(t0_value);
			t1 = space();
			div0 = element("div");
			div0.textContent = `${/*date*/ ctx[2]()} - ${/*site*/ ctx[3]()}`;
			t5 = space();
			div1 = element("div");
			div1.textContent = `${/*description*/ ctx[4]()}`;
			attr(h3, "class", h3_class_value = "title " + (/*index*/ ctx[1] === 0 ? "isFirst" : "") + " svelte-vfz1k7");
			attr(div0, "class", "date_and_site svelte-vfz1k7");
			attr(div1, "class", "description svelte-vfz1k7");
			attr(div2, "class", "feed svelte-vfz1k7");
			attr(a, "href", a_href_value = /*feed*/ ctx[0].link);
			attr(a, "class", "svelte-vfz1k7");
		},
		m(target, anchor) {
			insert(target, a, anchor);
			append(a, div2);
			append(div2, h3);
			append(h3, t0);
			append(div2, t1);
			append(div2, div0);
			append(div2, t5);
			append(div2, div1);
		},
		p(ctx, [dirty]) {
			if (dirty & /*feed*/ 1 && t0_value !== (t0_value = /*feed*/ ctx[0].title + "")) set_data(t0, t0_value);

			if (dirty & /*index*/ 2 && h3_class_value !== (h3_class_value = "title " + (/*index*/ ctx[1] === 0 ? "isFirst" : "") + " svelte-vfz1k7")) {
				attr(h3, "class", h3_class_value);
			}

			if (dirty & /*feed*/ 1 && a_href_value !== (a_href_value = /*feed*/ ctx[0].link)) {
				attr(a, "href", a_href_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(a);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { feed } = $$props;
	let { index } = $$props;

	function date() {
		const d = new Date(feed.isoDate);
		const yyyy = `${d.getFullYear()}`;
		const mm = `00${d.getMonth() + 1}`.slice(-2);
		const dd = `00${d.getDate()}`.slice(-2);
		return `${yyyy}/${mm}/${dd}`;
	}

	function site() {
		if ((/^https:\/\/memo\.yammer\.jp/).test(feed.link)) {
			return "memo.yammer.jp";
		}

		if ((/^https:\/\/basd4g\.hatenablog\.com/).test(feed.link)) {
			return "はてなブログ";
		}

		if ((/^https:\/\/qiita\.com\/basd4g/).test(feed.link)) {
			return "Qiita";
		}

		return feed.link;
	}

	function description() {
		const maxLength = 400;

		if (feed.contentSnippet.length <= maxLength) {
			return feed.contentSnippet;
		}

		return `${feed.contentSnippet.slice(0, maxLength - 1)}...`;
	}

	$$self.$$set = $$props => {
		if ("feed" in $$props) $$invalidate(0, feed = $$props.feed);
		if ("index" in $$props) $$invalidate(1, index = $$props.index);
	};

	return [feed, index, date, site, description];
}

class Feed extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { feed: 0, index: 1 });
	}
}

export default Feed;